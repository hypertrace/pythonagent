[tox]
skipsdist = true
envlist = py3{6,7,8,9}

[testenv]
sitepackages = True
install_command = pip install {opts} {packages}

deps =
    -r requirements.txt

allowlist_externals =
    pytest
    sleep
    docker-compose
    ./test_flask_1.sh
    bash
    ./test_flask_2.sh


setenv =
  PYTHONPATH=../../src
  HT_SERVICE_NAME=python_agent_test1
  HT_LOG_LEVEL={env:HT_LOG_LEVEL:}
  HT_ENABLE_CONSOLE_SPAN_EXPORTER=True

commands =
    docker compose stop mysqldb
    # Set selinux permissions on volumes being mounted into docker containers
    bash -ec "if [ `uname` = 'Linux' ] && [ "{env:GITHUB_ACTIONS:false}" != "true" ]; then chcon -h system_u:object_r:bin_t:s0 sql; chcon -Rt svirt_sandbox_file_t sql; fi"
    bash -ec "if [ `uname` = 'Linux' ] && [ "{env:GITHUB_ACTIONS:false}" != "true" ]; then chcon -h system_u:object_r:bin_t:s0 docker-healthcheck; chcon -Rt svirt_sandbox_file_t docker-healthcheck; fi"
    docker compose up -d --remove-orphans --force-recreate -V mysqldb
    bash -ec "set -x; while [ `docker inspect -f '\{\{ .State.Health.Status \}\}' mysqldb` != 'healthy' ]; do echo 'Waiting for MySQL to be up'; sleep 2; done"
    ./test_flask_1.sh
    ./test_flask_2.sh
    docker compose stop mysqldb
    docker compose down --rmi all

recreate = True
